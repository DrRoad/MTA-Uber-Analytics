predict(logit_model)
income06 = (0,6),
predict(logit_model, newdata = data.frame(
income06 = (0,6),
predict(logit_model, newdata = data.frame(
income06 = c(0,6),
edu = c(0,2),
age = c(40, 45)))
predict(logit_model, newdata = data.frame(
income06 = c(0,6),
educ = c(0,2),
age = c(40, 45)))
range(gss$educ)
range(na.omit(gss$educ))
range(na.omit(gss$educ))
range(na.omit(gss$income06))
range(na.omit(gss$age))
predict(logit_model, type = "response", newdata = data.frame(
educ = c(0,2),
income06 = c(10,6),
age = c(40, 45)))
predict(logit_model, newdata = data.frame(
educ = c(0,2),
income06 = c(10,6),
age = c(40, 45)))
predict(logit_model, type = "response", newdata = data.frame(
educ = c(0,2),
income06 = c(10,6),
age = c(40, 45)))
range(na.omit(gss$educ))
range(na.omit(gss$income06))
range(na.omit(gss$age))
predict(logit_model, type = "response", newdata = data.frame(
educ = c(3, 10, 20),
income06 = c(1, 12, 25),
age = c(19, 45, 89))
range(na.omit(gss$educ))
range(na.omit(gss$educ))
range(na.omit(gss$educ))
range(na.omit(gss$income06))
range(na.omit(gss$age))
predict(logit_model, type = "response", newdata = data.frame(
educ = c(3, 10, 20),
income06 = c(1, 12, 25),
age = c(19, 45, 89))
predict(logit_model, type = "response", newdata = data.frame(
educ = c(3, 10, 20),
predict(logit_model, type = "response", newdata = data.frame(
educ = c(3, 10, 20),
income06 = c(1, 12, 25),
age = c(19, 45, 89))
predict(logit_model, type = "response", newdata = data.frame(
predict(logit_model, type = "response", newdata = data.frame(
educ = c(3, 10, 20),
income06 = c(1, 12, 25),
age = c(19, 45, 89))
)
install.packages("visreg")
visreg(logit_model, "hrs1", by = "b",
partial = F, overlay = T,
xlab = "Hours",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05)
library(visreg)
visreg(logit_model, "hrs1", by = "b",
partial = F, overlay = T,
xlab = "Hours",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05)
?visreg
visreg(logit_model, "marriedDummy",
partial = F, overlay = T,
xlab = "Married",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05)
visreg(logit_model, "marriedDummy", by = "educ",
partial = F, overlay = T,
xlab = "Married",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05)
visreg(logit_model, "marriedDummy", by = "income06",
partial = F, overlay = T,
xlab = "Married",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05)
visreg(logit_model, "income06",
partial = F, overlay = T,
xlab = "Married",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05)
visreg(logit_model, "educ", by = "educ",
partial = F, overlay = T,
xlab = "Education",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05)
visreg(logit_model, "educ", by = "educ",
partial = F, overlay = T,
xlab = "Education",
ylab = "Predicted probability",
scale= "response",
type="contrast",
alpha=.05)
visreg(logit_model, "income06",
partial = F, overlay = T,
xlab = "Income",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05,
legend(NULL))
visreg(logit_model, "income06",
partial = F, overlay = T,
xlab = "Income",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05,
legend = NULL)
visreg(logit_model, "educ", by = "educ",
partial = F, overlay = T,
xlab = "Education",
ylab = "Predicted probability",
scale= "response",
type="contrast",
alpha=.05,
legend = NULL)
visreg(logit_model, "educ", by = "educ",
partial = F, overlay = T,
xlab = "Education",
ylab = "Predicted probability",
scale= "response",
type="contrast",
alpha=.05,
legend = NULL)
visreg(logit_model, "educ", by = "educ",
partial = F, overlay = T,
xlab = "Education",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05,
legend = NULL)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(car)
library(glmnet)
library(ggplot2)
library(magrittr)
library(MASS)
library(psych)
library(tidyverse)
library(visreg)
y_hat <- predict(logit_model, type = "response", newdata = data.frame(
educ = c(3, 10, 20),
income06 = c(1, 12, 25),
age = c(19, 45, 89)))
y_hat
range(na.omit(gss$age))
gss$educ <- ifelse(gss$educ < 98, gss$educ, NA)
multiple_LPM <- lm(marriedDummy ~ income06 + educ + age, gss)
summary(multiple_LPM)
ggplot(gss, aes(x = income06, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss, aes(x = educ, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss, aes(x = educ, y = marriedDummy)) +
geom_jitter() +
geom_line()
ggplot(gss, aes(x = educ, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
summary(multiple_LPM)
ggplot(gss, aes(x = income06, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss, aes(x = educ, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss, aes(x = income06, y = marriedDummy)) +
geom_point() +
geom_smooth()
ggplot(gss, aes(x = income06, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
summary(multiple_LPM)
ggplot(gss, aes(x = income06, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss, aes(x = educ, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
gss_young <- filter(gss, age < 30)
multiple_LPM <- lm(marriedDummy ~ income06 + educ + age, gss_young)
summary(multiple_LPM)
ggplot(gss, aes(x = income06, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss, aes(x = educ, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
multiple_LPM <- lm(marriedDummy ~ income06 + educ, gss_young)
summary(multiple_LPM)
ggplot(gss, aes(x = income06, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss, aes(x = educ, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
gss$religionDummy <- ifelse(gss$relig == 4, 0, 1)
multiple_LPM <- lm(marriedDummy ~ income06 + educ + age + religionDummy, gss_young)
summary(multiple_LPM)
ggplot(gss, aes(x = income06, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss, aes(x = educ, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
gss_young <- filter(gss, age < 25)
multiple_LPM <- lm(marriedDummy ~ income06 + educ + age + religionDummy, gss_young)
summary(multiple_LPM)
gss_young <- filter(gss, age < 30)
range(na.omit(gss$age))
multiple_LPM <- lm(marriedDummy ~ income06 + educ + age + religionDummy, gss_young)
summary(multiple_LPM)
ggplot(gss, aes(x = income06, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss, aes(x = educ, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
gss_young$income06 <- ifelse(gss_young$income06 < 27, gss_young$income06, NA)
multiple_LPM <- lm(marriedDummy ~ income06 + educ + age + religionDummy, gss_young)
summary(multiple_LPM)
ggplot(gss, aes(x = age, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss_young, aes(x = age, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss_young, aes(x = religionDummy, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
summary(multiple_LPM)
ggplot(gss_young, aes(x = income06, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss_young, aes(x = educ, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss_young, aes(x = age, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss_young, aes(x = religionDummy, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
logit_model <- glm(marriedDummy ~ income06 + educ + age, gss_young, family = "binomial")
summary(logit_model)
logit_model <- glm(marriedDummy ~ income06 + educ + age + religionDummy, gss_young, family = "binomial")
summary(logit_model)
mean(gss_young$marriedDummy)
summary(logit_model)
gss$marital[1]
gss$marriedDummyl[1]
gss$marriedDummy[1]
gss$marriedDummy <- ifelse(gss$marital < 5, 1, 0)
range(na.omit(gss$age))
gss_young$income06 <- ifelse(gss_young$income06 < 27, gss_young$income06, NA)
multiple_LPM <- lm(marriedDummy ~ income06 + educ + age + religionDummy, gss_young)
summary(multiple_LPM)
ggplot(gss_young, aes(x = income06, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss_young, aes(x = educ, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss_young, aes(x = age, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss_young, aes(x = religionDummy, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
gss_young <- filter(gss, age < 30)
range(na.omit(gss$age))
gss_young$income06 <- ifelse(gss_young$income06 < 27, gss_young$income06, NA)
multiple_LPM <- lm(marriedDummy ~ income06 + educ + age + religionDummy, gss_young)
summary(multiple_LPM)
ggplot(gss_young, aes(x = income06, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss_young, aes(x = educ, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss_young, aes(x = age, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
ggplot(gss_young, aes(x = religionDummy, y = marriedDummy)) +
geom_jitter() +
geom_smooth()
logit_model <- glm(marriedDummy ~ income06 + educ + age + religionDummy, gss_young, family = "binomial")
mean(gss_young$marriedDummy)
summary(logit_model)
p_married <- mean(gss_young$marriedDummy)
log(p_married / 1-p_married )
p_married <- mean(gss_young$marriedDummy)
p_married
summary(logit_model)
log(p_married / (1 - p_married))
log(p_married / (1 - p_married))
exp(1)^logit_model[1]$coefficients[1]
exp(1)^logit_model[1]$coefficients[2]
exp(1)^logit_model[1]$coefficients[3]
range(na.omit(gss$educ))
range(na.omit(gss$income06))
range(na.omit(gss$age))
y_hat <- predict(logit_model, type = "response", newdata = data.frame(
educ = c(3, 10, 20),
income06 = c(1, 12, 25),
age = c(19, 45, 89)))
y_hat <- predict(logit_model, type = "response", newdata = data.frame(
educ = c(3, 10, 20),
income06 = c(1, 12, 25),
age = c(19, 45, 89)))
y_hat <- predict(logit_model, type = "response", newdata = data.frame(
educ = c(3, 10, 20),
income06 = c(1, 12, 25),
age = c(19, 45, 89),
religionDummy = c(0, 0, 1)))
exp(1)^logit_model[1]$coefficients[4]
log(p_married / (1 - p_married))
exp(1)^logit_model[1]$coefficients[1]
exp(1)^logit_model[1]$coefficients[2]
exp(1)^logit_model[1]$coefficients[3]
exp(1)^logit_model[1]$coefficients[4]
range(na.omit(gss_young$educ))
range(na.omit(gss_young$income06))
range(na.omit(gss_young$age))
y_hat <- predict(logit_model, type = "response", newdata = data.frame(
educ = c(3, 10, 20),
income06 = c(1, 12, 25),
age = c(19, 45, 89),
religionDummy = c(0, 0, 1)))
pred.dat <- with(gss, expand.grid(
hrs1 = sort(unique(hrs1)),
age = mean(age),
prestg80 = mean(prestg80),
babies = sort(unique(babies))))
visreg(logit_model, "educ", by = "educ",
partial = F, overlay = T,
xlab = "Education",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05,
legend = NULL)
visreg(logit_model, "educ", by = "educ",
partial = F, overlay = T,
xlab = "Education",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05,
legend = "none")
visreg(logit_model, "educ", by = "educ",
partial = F, overlay = T,
xlab = "Education",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05,
legend = 0)
range(na.omit(gss_young$educ))
range(na.omit(gss_young$income06))
range(na.omit(gss_young$age))
y_hat <- predict(logit_model, type = "response", newdata = data.frame(
educ = c(3, 10, 20),
income06 = c(1, 12, 25),
age = c(19, 45, 89),
religionDummy = c(0, 0, 1)))
visreg(logit_model, "educ", by = "educ",
partial = F, overlay = T,
xlab = "Education",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05,
legend = 0)
visreg(logit_model, "income06",
partial = F, overlay = T,
xlab = "Income",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05)
range(na.omit(gss_young$educ))
range(na.omit(gss_young$income06))
range(na.omit(gss_young$age))
y_hat <- predict(logit_model, type = "response", newdata = data.frame(
educ = c(3, 10, 20),
income06 = c(1, 12, 25),
age = c(19, 45, 89),
religionDummy = c(0, 0, 1)))
visreg(logit_model, "educ", by = "educ",
partial = F, overlay = T,
xlab = "Education",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05,
legend = 0)
visreg(logit_model, "income06",
partial = F, overlay = T,
xlab = "Income",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05)
visreg(logit_model, "age",
partial = F, overlay = T,
xlab = "Age",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05)
range(na.omit(gss_young$educ))
range(na.omit(gss_young$income06))
range(na.omit(gss_young$age))
exp(cbind(coef(logit_model), confint(logit_model)))
logit_model <- glm(marriedDummy ~ income06 + educ + age + religionDummy, gss_young, family = "binomial")
p_married <- mean(gss_young$marriedDummy)
p_married
summary(logit_model)
log(p_married / (1 - p_married))
exp(1)^logit_model[1]$coefficients[1]
exp(1)^logit_model[1]$coefficients[2]
exp(1)^logit_model[1]$coefficients[3]
exp(1)^logit_model[1]$coefficients[4]
exp(cbind(coef(logit_model), confint(logit_model)))
exp(cbind(coef(logit_model), confint(logit_model)))
range(na.omit(gss_young$educ))
range(na.omit(gss_young$income06))
range(na.omit(gss_young$age))
y_hat <- predict(logit_model, type = "response", newdata = data.frame(
educ = c(3, 10, 20),
income06 = c(1, 12, 25),
age = c(19, 25, 29),
religionDummy = c(0, 0, 1)))
y_hat
visreg(logit_model, "educ", by = "educ",
partial = F, overlay = T,
xlab = "Education",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05,
legend = 0)
visreg(logit_model, "income06",
partial = F, overlay = T,
xlab = "Income",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05)
visreg(logit_model, "age",
partial = F, overlay = T,
xlab = "Age",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05)
y_hat
visreg(logit_model, "educ", by = "educ",
partial = F, overlay = T,
xlab = "Education",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05,
legend = 0)
visreg(logit_model, "income06",
partial = F, overlay = T,
xlab = "Income",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05)
visreg(logit_model, "age",
partial = F, overlay = T,
xlab = "Age",
ylab = "Predicted probability",
scale= "response",
type="conditional",
alpha=.05)
install.packages("shinydashboard")
getwd()
setwd("~/Documents/COLUMBIA_QMSS/DataViz/Group_T_Transit/shiny_app")
library(rsconnect)
deployApp()
